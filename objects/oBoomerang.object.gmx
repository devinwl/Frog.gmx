<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBoomerang</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>targetX = 0;
targetY = 0;

vx = 0;
vy = 0;

vxMax = 10;
vyMax = 5;

reachedTarget = false;

// Same as xscale, 1 = heading right, -1 = heading left
heading = 0;

image_speed = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>heading = sign(targetX - x);

if(!reachedTarget) {
    vx = Approach(vx, heading*7, 0.3);
} else {
    if(x == oPlayer.x) {
        vx = Approach(vx, 0, 0.7);
    } else {
        var spd = sign(oPlayer.x - x);
        vx = Approach(vx, spd*9, 0.7);
    }
}

if(reachedTarget) {  
    if(y == oPlayer.y) {
        vy = Approach(vy, 0, 1);
    } else {
        var spd = sign(oPlayer.y - y);
        vy = Approach(vy, spd*5, 0.7);
    }
}

// Move it
repeat(abs(vx)) {
    x += sign(vx);
    
    if(x == oPlayer.x)
        vx = 0;
}

repeat(abs(vy)) {
    y += sign(vy);
    
    if(y == oPlayer.y) vy = 0;
}

// Have I reached my target?
if(sign(heading) &gt; 0) {
    if(x &gt;= targetX &amp;&amp; !reachedTarget || place_meeting(x+vx,y,oParSolid)) {
        reachedTarget = true;
        vx = 0;
    }
}
else {
    if(x &lt;= targetX &amp;&amp; !reachedTarget || place_meeting(x-abs(vx),y,oParSolid)) {
        reachedTarget = true;
        vx = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

//draw_text(x,y-12,"x: " + string(x));
//draw_text(x,y,"tX: " + string(targetX));
//draw_text(x,y+12,"h: " + string(heading));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
